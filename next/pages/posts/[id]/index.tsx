import Head from 'next/head'
import Image from 'next/image'
import styles from '../../../styles/Home.module.css'
import { GetStaticPaths } from 'next'

type Post= {
  id: number
  title: string
  content: string
  userId: number
  authorId: number
  published: boolean
}
type Props = {
  post: Post,
  nextPost: Post,
  prevPost: Post,
}
function Post({ post, nextPost, prevPost }: Props) {
  return (
    <div className={styles.container}>
      <Head>
        <title>{post.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h2>
          {post.title}
        </h2>

        <p className={styles.description}>
          {post.content}
        </p>

        <div className={styles.grid}>

        <a
            href={(prevPost.title) ? `/posts/${prevPost.id}` : ""}
            className={styles.card}
            style={{width: '100%'}}
            >
            <h2>Back</h2>
            <p>{prevPost.title}</p>
          </a>

          <a
            href={(nextPost.title) ? `/posts/${nextPost.id}` : ""}
            className={styles.card}
            style={{width: '100%'}}
          >
            <h2>Next</h2>
            <p>{nextPost.title}</p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://github.com/umihico"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by umihico
        </a>
      </footer>
    </div>
  )
}
export default Post
export async function http<T>(
  request: RequestInfo
): Promise<T> {
  const response = await fetch(request);
  let body;
  try {
    body = await response.json();
  } catch (error) {
    body = {};
  }
  return body;
}
export const getStaticPaths: GetStaticPaths = async () => {
  const posts = await http<Post[]>('http://nest:3000/feed')
  const paths = posts.map((post) => ({
    params: { id: post.id.toString() },
  }))
  return { paths, fallback: false }
};
type Params = {
  params: {
    id: string
	}
}
export async function getStaticProps({ params }: Params) {

  const post = await http<Post>(`http://nest:3000/post/${params.id}`)
  const nextId=parseInt(params.id)+1;
  const prevId=parseInt(params.id)-1;
  const nextPost = await http<Post>(`http://nest:3000/post/${nextId}`)
  const prevPost = await http<Post>(`http://nest:3000/post/${prevId}`)
  return {
    props: {
      post,
      nextPost,
      prevPost,
    },
  }
}